var p=Object.defineProperty;var u=(s,e,t)=>e in s?p(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var c=(s,e,t)=>u(s,typeof e!="symbol"?e+"":e,t);import{M as f}from"./vendor.js";class d extends f{static mergeHeaders(e){const t={...e};return t.Authorization="Bearer undefined",t}static customApiBase(e){return this.apiConfig={baseURL:"",headers:{...e}},this.api()}static FetchAll(e=[],t={},h={},r={page:1,limit:15,filters:{},clearPrimaryModelOnly:!1}){const a=`${this.baseUrl}${this.entityUrl}`,n=this.mergeHeaders(h);let l=(r.page-1)*r.limit,i=a,m={},o={};return i=a,this.customApiBase(n).get(i,{save:!1,params:{limit:r.limit,offset:l,...t,...m,...o}})}static FetchById(e,t=[],h={},r={}){const a=`${this.baseUrl}${this.entityUrl}`,n=this.mergeHeaders(r);let l=a,i={};return l=`${a}/${e}`,i={},this.customApiBase(n).get(l,{save:!1,params:{...i}})}}c(d,"entityUrl",""),c(d,"baseUrl");export{d as B};
